<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Send a Nudge</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
    let canvas;
    let ctx;
    let isDrawing = false;

    function storeMessageAndNavigate() {
      const message = document.getElementById('nudgeMessage').value;
      const drawingData = canvas.toDataURL(); // Get drawing data as a base64 encoded string
      sessionStorage.setItem('nudgeMessage', message);
      sessionStorage.setItem('nudgeDrawing', drawingData);
      location.href = '/sendNudgeDelayed';
    }

    function initCanvas() {
      canvas = document.getElementById('drawingCanvas');
      ctx = canvas.getContext('2d');

      canvas.addEventListener('mousedown', startDrawing);
      canvas.addEventListener('mousemove', draw);
      canvas.addEventListener('mouseup', stopDrawing);
      canvas.addEventListener('touchstart', (e) => {
        e.preventDefault();
        startDrawing(e.touches[0]);
      });
      canvas.addEventListener('touchmove', (e) => {
        e.preventDefault();
        draw(e.touches[0]);
      });
      canvas.addEventListener('touchend', stopDrawing);
      canvas.addEventListener('touchcancel', stopDrawing);
    }

    function startDrawing(event) {
      isDrawing = true;
      ctx.beginPath();
      ctx.moveTo(event.clientX - canvas.offsetLeft, event.clientY - canvas.offsetTop);
    }

    function draw(event) {
      if (!isDrawing) return;
      ctx.lineTo(event.clientX - canvas.offsetLeft, event.clientY - canvas.offsetTop);
      ctx.stroke();
    }

    function stopDrawing() {
      isDrawing = false;
    }

    document.addEventListener('DOMContentLoaded', initCanvas);
  </script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #e9a9a9;
    }
    h1 {
      text-align: center;
      padding: 20px;
      color: #ffffff;
    }
    .container {
      max-width: 600px;
      margin: 20px auto;
      padding: 20px;
      background-color: #ffffff;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
      border-radius: 10px;
    }
    button {
      font-weight: 500;
      width: 100%;
      padding: 10px;
      background-color: #cd6161;
      color: white;
      border: none;
      border-radius: 50px;
      cursor: pointer;
      margin-bottom: 10px
    }
    button:hover {
      background-color: #B2344C;
    }
    canvas {
      border: 1px solid #a8a8a8;
      margin-bottom: 10px;
      width: 100%;
      height: 300px;
    }
  </style>
</head>
<body>
  <h1>LoveLink</h1>
  <div class="container">
    <h2 style="text-align: center;">Compose</h2>
    <form action="/sendNudge" method="POST" onsubmit="appendDrawingData();">

      <div class="form-group">
        <textarea class="form-control" id="nudgeMessage" name="nudgeMessage" rows="4" required placeholder="Enter a message"></textarea>
      </div>
      <div>
        <canvas id="drawingCanvas" height="200"></canvas>
      </div>
      <input type="hidden" id="drawingData" name="drawingData">

      <script>
        function appendDrawingData() {
          const drawingData = canvas.toDataURL();
          document.getElementById('drawingData').value = drawingData;
        }
      </script>
      <button type="submit">Send</button>
      <button type="button" onclick="storeMessageAndNavigate();">Send Delayed</button>
    </form>
    <button onclick="location.href='/profile';">Cancel</button>
  </div>
</body>
</html>